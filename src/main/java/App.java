import java.util.List;
import java.util.Scanner;
import java.util.Arrays;
import java.util.HashMap;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class App {
    private ItemRepository itemRepository;
    private SalesPromotionRepository salesPromotionRepository;

    public App(ItemRepository itemRepository, SalesPromotionRepository salesPromotionRepository) {
        this.itemRepository = itemRepository;
        this.salesPromotionRepository = salesPromotionRepository;
    }

    public String bestCharge(List<String> inputs) {
        //TODO: write code here
    	
    	//初始化菜单及折扣
        List<Item> items = itemRepository.findAll();
        List<SalesPromotion> salesPromotion = salesPromotionRepository.findAll();

    	//接受用户输入并处理
        HashMap<String, Integer> inputItem = new HashMap<>();
        String id = "";
        int nums = 0;
        String[] temp = new String[2];

        for (String s : inputs) {
            temp = s.split(" x ");
            id = temp[0];
            nums = Integer.valueOf(temp[1]);
            inputItem.put(id, nums);
        }
        
        
        //输出用户订单
    	System.out.println("============= Order details =============\n");
        for (Item item : items) {
            for (String key : inputItem.keySet()) {
                if (key.equals(item.getId())) {
                	 System.out.println(item.getName() + " x " + inputItem.get(key) + " = " + (int)Math.floor(inputItem.get(key) * item.getPrice()) + " yuan\n");
                }
            }
        }
        
        System.out.println("-----------------------------------\n");
        
        //计算总价
        double total = 0;
        HashMap<String, Double> price = new HashMap<>();
        HashMap<String, String> name = new HashMap<>();
        for (Item item : items) {
            price.put(item.getId(), item.getPrice());
            name.put(item.getId(), item.getName());
        }
        
        
        for (String i : inputItem.keySet()) {
                total += inputItem.get(i) * price.get(i);
        }
        
        
        //计算使用半价价格
        double promotionPrice = 0;
        double halfPromotionPrice = 0;
        List<String> relatedItems = null;
        StringBuffer promotionName = new StringBuffer();
        for (SalesPromotion sp : salesPromotion) {
            if (!(sp.getRelatedItems().size() == 0)) {
                relatedItems = sp.getRelatedItems();
            }
        }
        
        for (String i: inputItem.keySet()) {
            //将已购买的半价商品计算半价前的价格存到promotionPrice里
            if (relatedItems.contains(i)) {
            	promotionName.insert(0,name.get(i) + "，");
                promotionPrice += inputItem.get(i) * price.get(i);
            } else {
                //将已购买的不是特价的商品数量乘以价格加到total上
            	halfPromotionPrice += inputItem.get(i) * price.get(i);
            }
        }
        halfPromotionPrice = halfPromotionPrice + promotionPrice*0.5;

        
        //计算使用满减价格
        double fullPromotionPrice = 0;
        if(total >= 30) {
        	fullPromotionPrice = total - 6;
        }
        
        //对比价格并输出
        if(halfPromotionPrice < fullPromotionPrice ) {
        	System.out.println("Promotion used:\n");
        	System.out.println("Half price for certain dishes (" +  promotionName.deleteCharAt(promotionName.length() - 1).toString()+ "),saving " + promotionPrice*0.5+ " yuan\n");
            System.out.println("-----------------------------------\n");
            System.out.println("In Total: "+halfPromotionPrice+" yuan\n");
            System.out.println("===================================");
        }else {
        	if(total >= 30) {
            	System.out.println("Promotion used:\n");
            	System.out.println("Deduct 6 yuan when the order reaches 30 yuan, saving 6 yuan");
                System.out.println("-----------------------------------\n");
                System.out.println("In Total: "+fullPromotionPrice+" yuan\n");
                System.out.println("===================================");
        	}else if(halfPromotionPrice < total){
            	System.out.println("Promotion used:\n");
            	System.out.println("Half price for certain dishes (" +  promotionName.deleteCharAt(promotionName.length() - 1).toString()+ "),saving " + promotionPrice+ " yuan\n");
                System.out.println("-----------------------------------\n");
                System.out.println("In Total: "+halfPromotionPrice+" yuan\n");
                System.out.println("===================================");
        	}
        	else {
                System.out.println("In Total: "+total+" yuan\n");
                System.out.println("===================================");
        	}
        }
        
             
        return null;
    }    


}
